{"remainingRequest":"/Users/ekaterinaprokosheva/Desktop/p/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ekaterinaprokosheva/Desktop/p/src/page/statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ekaterinaprokosheva/Desktop/p/src/page/statistics.vue","mtime":1635675336751},{"path":"/Users/ekaterinaprokosheva/Desktop/p/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ekaterinaprokosheva/Desktop/p/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ekaterinaprokosheva/Desktop/p/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ekaterinaprokosheva/Desktop/p/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgc2lkZWJhciBmcm9tICIuLi9jb21wb25lbnRzL3NpZGViYXIiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJzdGF0aXN0aWNzIiwNCiAgY29tcG9uZW50czoge3NpZGViYXJ9LA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2hhcnREYXRhOiBbMTAsIDUwLCAyMCwgMTAwLCA0MCwgNjAsIDgwXSwNCiAgICAgIGxhYmVsczogWyfQr9C90LLQsNGA0YwnLCAn0KTQtdCy0YDQsNC70YwnLCAn0JzQsNGA0YInLCAn0JDQv9GA0LXQu9GMJywgJ9Cc0LDQuScsICfQmNGO0L3RjCcsICfQmNGO0LvRjCddDQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgZ2V0UmFuZG9tQ2hhcnREYXRhICgpIHsNCiAgICAgIHRoaXMuY2hhcnREYXRhID0gdGhpcy5jaGFydERhdGEubWFwKCgpID0+IHRoaXMuZ2V0UmFuZG9tQXJiaXRyYXJ5KDEsIDIwMCkpDQogICAgfSwNCiAgICBnZXRSYW5kb21BcmJpdHJhcnkobWluLCBtYXgpIHsNCiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7DQogICAgfSwNCiAgICByZW1vdmVDaGFydERhdGEoKSB7DQogICAgICB0aGlzLmNoYXJ0RGF0YS5wb3AoKQ0KICAgICAgdGhpcy5sYWJlbHMucG9wKCkNCiAgICAgfSwNCiAgICBkZWxldGVDaGFydERhdGEoKXsNCiAgICAgIHRoaXMuY2hhcnREYXRhPVswXQ0KICAgIH0sDQogICAgICAgIA0KICAgICAgICANCiAgICAgIA0KICAgIH0NCiAgICANCn0gICANCiAgICANCg0K"},{"version":3,"sources":["statistics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA","file":"statistics.vue","sourceRoot":"src/page","sourcesContent":["<template>\r\n  <div class=\"container_list\">\r\n    <sidebar></sidebar>\r\n    <div class=\"main_statistics\">\r\n      <div class=\"title_main\">\r\n        <h3>Статистика</h3>\r\n      </div>\r\n      <div class=\"statistics_page\">\r\n        <div class=\"grafics\">\r\n          <TrendChart\r\n                :datasets=\"[\r\n                    {\r\n                      data: chartData,\r\n                      smooth: true,\r\n                      fill: true\r\n                    },\r\n                     {\r\n                      data: chartData.map(item => item *2),\r\n                      smooth: true,\r\n                      fill: true\r\n                    }\r\n                  ]\"\r\n                  :grid=\"{\r\n                     verticalLines: true,\r\n                     horizontalLines: true\r\n                  }\"\r\n                :labels='{\r\n                   xLabels: labels,\r\n                  yLabels: 5\r\n                }'\r\n          :min=\"0\">\r\n          </TrendChart>\r\n        </div>\r\n        <div class=\"btn_grafics\">\r\n          <button @click=\"getRandomChartData\">Случайные данные</button>\r\n          <button>Добавить данные</button>\r\n          <button @click=\"deleteChartData\">Удалить данные</button>\r\n          <button @click=\"addChartData\">Увеличить кол-во данных</button>\r\n          <button @click=\"removeChartData\">Уменьшить кол-во данных</button>\r\n        </div>\r\n        <div class=\"no_statistic\">\r\n          <p>К сожалению статистика не достапна с мобилного устройства</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport sidebar from \"../components/sidebar\";\r\n\r\nexport default {\r\n  name: \"statistics\",\r\n  components: {sidebar},\r\n  data () {\r\n    return {\r\n      chartData: [10, 50, 20, 100, 40, 60, 80],\r\n      labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль']\r\n    }\r\n  },\r\n  methods: {\r\n    getRandomChartData () {\r\n      this.chartData = this.chartData.map(() => this.getRandomArbitrary(1, 200))\r\n    },\r\n    getRandomArbitrary(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    },\r\n    removeChartData() {\r\n      this.chartData.pop()\r\n      this.labels.pop()\r\n     },\r\n    deleteChartData(){\r\n      this.chartData=[0]\r\n    },\r\n        \r\n        \r\n      \r\n    }\r\n    \r\n}   \r\n    \r\n\r\n</script>\r\n\r\n<style scoped></style>"]}]}